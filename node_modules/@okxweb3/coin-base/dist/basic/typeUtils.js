"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.jsonStringifyUniform = exports.cloneObject = exports.assertBufferLength = exports.convert2BigNumber = exports.convert2Number = void 0;
const crypto_lib_1 = require("@okxweb3/crypto-lib");
function convert2Number(data) {
    if (data == undefined) {
        return undefined;
    }
    if (typeof data === "string") {
        return parseInt(data);
    }
    return data;
}
exports.convert2Number = convert2Number;
function convert2BigNumber(data) {
    if (data == undefined) {
        return undefined;
    }
    if (crypto_lib_1.BigNumber.isBigNumber(data)) {
        return data;
    }
    return new crypto_lib_1.BigNumber(data);
}
exports.convert2BigNumber = convert2BigNumber;
function assertBufferLength(data, length) {
    if (data.length != length) {
        throw Error("buffer length is illegal");
    }
}
exports.assertBufferLength = assertBufferLength;
function cloneObject(data) {
    return JSON.parse(JSON.stringify(data));
}
exports.cloneObject = cloneObject;
function jsonStringifyUniform(data) {
    return JSON.stringify(data, (key, value) => {
        if (!value) {
            return value;
        }
        if (value.type === "Buffer") {
            return crypto_lib_1.base.toHex(value);
        }
        else if (value instanceof Uint8Array) {
            return crypto_lib_1.base.toHex(value);
        }
        else if (typeof value === 'bigint') {
            return value.toString();
        }
        else {
            return value;
        }
    });
}
exports.jsonStringifyUniform = jsonStringifyUniform;
//# sourceMappingURL=typeUtils.js.map