export = EDDSA;
declare function EDDSA(curve: any): EDDSA;
declare class EDDSA {
    constructor(curve: any);
    curve: any;
    g: any;
    pointClass: any;
    encodingLength: number | undefined;
    hash: Sha512Constructor | undefined;
    sign(message: any[] | string, secret: any[] | string | KeyPair): Signature;
    verify(message: any[], sig: any[] | string | Signature, pub: any[] | string | Point | KeyPair): boolean;
    hashInt(...args: any[]): any;
    keyFromPublic(pub: any): KeyPair;
    keyFromSecret(secret: any): KeyPair;
    makeSignature(sig: any): Signature;
    encodePoint(point: any): any;
    decodePoint(bytes: any): any;
    encodeInt(num: any): any;
    decodeInt(bytes: any): any;
    isPoint(val: any): boolean;
}
import KeyPair = require("./key");
import Signature = require("./signature");
